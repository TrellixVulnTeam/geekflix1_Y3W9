{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../movie.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction HomeComponent_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const movies_r3 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", movies_r3.overview, \" \");\n  }\n}\n\nfunction HomeComponent_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, HomeComponent_ul_2_li_1_Template, 2, 1, \"li\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const movies_r3 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", movies_r3);\n  }\n}\n\nfunction HomeComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Data Available\");\n  }\n}\n\nexport class HomeComponent {\n  constructor(movieService) {\n    this.movieService = movieService;\n  }\n\n  ngOnInit() {\n    this.movies$ = this.http.get(`${this.baseUrl}/discover/movie${this.key}&sort_by=release_date.desc&primary_release_date.lte=2020-12-30&include_adult=false&include_video=false&page=1`).do(console.log(movies));\n    /*         this.movies = movies['results'];\n     */\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.MovieService));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[1, \"title\", \"text-center\", \"h1-responsive\"], [4, \"ngIf\", \"ngIfElse\"], [\"noData\", \"\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Geek Flix\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, HomeComponent_ul_2_Template, 2, 1, \"ul\", 1);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵtemplate(4, HomeComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 2, ctx.movies$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf],\n  pipes: [i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["/Users/davidchazarrabru/Documents/GitHub/geekflix1/src/app/home/home.component.ts","/Users/davidchazarrabru/Documents/GitHub/geekflix1/src/app/home/home.component.html"],"names":[],"mappings":";;;;;;ACGE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACI,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACJ,IAAA,EAAA,CAAA,YAAA;;;;;AADI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,SAAA,CAAA,QAAA,EAAA,GAAA;;;;;;AAFN,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACE,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAGF,IAAA,EAAA,CAAA,YAAA;;;;;AAHwB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA;;;;;;AAIH,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,mBAAA;;;;ADKrB,OAAM,MAAO,aAAP,CAAoB;AAKxB,EAAA,WAAA,CAAoB,YAApB,EAA8C;AAA1B,SAAA,YAAA,GAAA,YAAA;AAA+B;;AAGjD,EAAA,QAAQ,GAAA;AAEN,SAAK,OAAL,GAAe,KAAK,IAAL,CACd,GADc,CACD,GAAG,KAAK,OAAO,kBAAkB,KAAK,GAAG,+GADxC,EAEb,EAFa,CAGb,OAAO,CAAC,GAAR,CAAY,MAAZ,CAHa,CAAf;AAKN;AACG;AACI;;AAjBmB;;;mBAAb,a,EAAa,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,YAAA,C;AAAA,C;;;QAAb,a;AAAa,EAAA,SAAA,EAAA,CAAA,CAAA,UAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA,CAAA,QAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACZ1B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAA4C,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AAErD,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;;AAKA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA;;;;;;AALK,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,OAAA,CAAA,EAAsB,UAAtB,EAAsB,GAAtB","sourcesContent":["import { Movie } from '../movie';\nimport { MovieService } from '../movie.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  \n  movies :any;\n\n\n  constructor(private movieService: MovieService) { }\n\n  \n    ngOnInit()   {\n    \n      this.movies$ = this.http\n      .get<Movie[]>(`${this.baseUrl}/discover/movie${this.key}&sort_by=release_date.desc&primary_release_date.lte=2020-12-30&include_adult=false&include_video=false&page=1`)\n       .do(\n        console.log(movies);\n  \n/*         this.movies = movies['results'];\n */  \n      });\n    }\n  }\n\n  \n}","<h1 class=\"title text-center h1-responsive\">Geek Flix</h1>\n\n<ul *ngIf=\"movies$ | async as movies else noData\">\n  <li *ngFor=\"let movie of movies\">\n      {{movies.overview}}\n  </li> \n</ul>\n<ng-template #noData>No Data Available</ng-template>\n\n <!--  <div class=\"container\">\n    <div class=\"row\">\n      <div\n        class=\"col-4 col-md-4 col-lg-3 my-3 px-2 px-md-4\"\n        *ngFor=\"let movie of movies | async\">\n          <a  \n          class=\"view overlay\" \n          routerLink=\"movie-detail/:id{{ movie.id }}\">{{movie.title}}\n            <img\n              class=\"poster-img\"\n              src=\"https://cdn.pastemagazine.com/www/system/images/photo_albums/best-movie-posters-2016/large/moonlight-ver2-xlg.jpg?1384968217\"\n              title=\"{{ movie.title }}\"\n              alt=\"{{ movie.title }}\"\n              routerLink=\"/movie-detail/{{ movie.id }}\"           \n               />\n            \n            <h3>{{ movie.title }}</h3>\n            <p>{{ movie.overview}}</p>\n          </a>\n        </div>\n        </div> -->"],"sourceRoot":""},"metadata":{},"sourceType":"module"}