{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../movie.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction MovieDetailComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"img\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const photo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", photo_r1.url, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport class MovieDetailComponent {\n  constructor(movieService, route) {\n    this.movieService = movieService;\n    this.route = route;\n    this.photos = [];\n    this.almbumId = [];\n  }\n\n  ngOnInit() {\n    this.almbumId = this.route.snapshot.params.albumId;\n    this.photos = this.movieService.getPhotos(this.almbumId);\n  }\n\n}\n\nMovieDetailComponent.ɵfac = function MovieDetailComponent_Factory(t) {\n  return new (t || MovieDetailComponent)(i0.ɵɵdirectiveInject(i1.MovieService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nMovieDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MovieDetailComponent,\n  selectors: [[\"movie-detail\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[1, \"row\"], [\"class\", \"col-xs-12\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-xs-12\"], [\"alt\", \"\", 1, \"img-responsive\", 3, \"src\"]],\n  template: function MovieDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, MovieDetailComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 0);\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"h1\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 0);\n      i0.ɵɵelementStart(8, \"div\", 2);\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10, \"Movie description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx.photos));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"Movie \", ctx.id, \"\");\n    }\n  },\n  directives: [i3.NgForOf],\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb3ZpZS1kZXRhaWwuY29tcG9uZW50Lmxlc3MifQ== */\"]\n});","map":{"version":3,"sources":["/Users/davidchazarrabru/Documents/GitHub/geekflix1/src/app/movie-detail/movie-detail.component.ts","/Users/davidchazarrabru/Documents/GitHub/geekflix1/src/app/movie-detail/movie-detail.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieService } from '../movie.service';\n\n\n@Component({\n  selector: 'movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.less']\n})\nexport class MovieDetailComponent implements OnInit {\n  \n  photos: any = [];\n  almbumId : any = [];\n\n  constructor(\n    \n    private movieService : MovieService,\n    private route: ActivatedRoute,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.almbumId = this.route.snapshot.params.albumId;\n    this.photos = this.movieService.getPhotos(this.almbumId);\n\n  }\n} \n\n\n","<div class=\"row\">\n    <div class=\"col-xs-12\" *ngFor=\"let photo of photos | async\">\n        <img src=\"{{photo.url}}\" alt=\"\" class=\"img-responsive\">\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <h1>Movie {{ id }}</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <p>Movie description</p>\n    </div>\n</div>\n\n\n<!-- <div *ngIf=\"movie\">\n    <h2>{{movie.name | uppercase}} Details</h2>\n    <div>{{movie.desc}}</div>\n    <div>\n      <label for=\"movie-name\">Movie  </label>\n    </div> \n  </div> -->\n\n \n  "],"sourceRoot":""},"metadata":{},"sourceType":"module"}